#include <iostream>

// Базовый класс Персонаж
class Character {
protected:
	std::string name;
	int health;
public:
	Character(std::string name, int health) : name(name), health(health) {}

	virtual void attack() = 0;

	void takeDamage(int damage) {
		health -= damage;
		if (health <= 0) {
			std::cout << name << " погиб\n";
		}
	}
};

// Подклассы Персонажа

class Warrior : public Character {
public:
	Warrior(std::string name, int health) : Character(name, health) {}

	void attack() override {
		std::cout << name << " атакует мечом\n";
	}
};

class Mage : public Character {
public:
	Mage(std::string name, int health) : Character(name, health) {}

	void attack() override {
		std::cout << name << " атакует магией\n";
	}
};

// Дополнительный класс Оружие

class Weapon {
protected:
	std::string type;
public:
	Weapon(std::string type) : type(type) {}

	virtual void use() = 0;
};

// Подклассы Оружия

class Sword : public Weapon {
public:
	Sword() : Weapon("меч") {}

	void use() override {
		std::cout << "Удар мечом\n";
	}
};

class Staff : public Weapon {
public:
	Staff() : Weapon("посох") {}

	void use() override {
		std::cout << "Заклинание посохом\n";
	}
};

// Класс Игра

class Game {
private:
	Character* characters[2];
	Weapon* weapons[2];
public:
	Game() {
		characters[0] = new Warrior("Воин", 100);
		characters[1] = new Mage("Маг", 80);

		weapons[0] = new Sword();
		weapons[1] = new Staff();
	}

	~Game() {
		for (int i = 0; i < 2; i++) {
			delete characters[i];
			delete weapons[i];
		}
	}

	void play() {
		for (int i = 0; i < 2; i++) {
			characters[i]->attack();
			weapons[i]->use();

			characters[1 - i]->takeDamage(20);
		}
	}
};

int main() {
	Game game;
	game.play();

	return 0;
}
